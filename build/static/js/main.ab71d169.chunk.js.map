{"version":3,"sources":["Configuration.js","Page-Loader.js","components/Menu/Index.js","components/Menu/Component.js","index.js"],"names":["settings","prefix","Fallback","Loader","Content","children","InlineLoading","status","style","marginTop","marginLeft","display","Component","HeaderContainer","render","isSideNavExpanded","onClickSideNavExpand","Header","SkipToContent","HeaderMenuButton","onClick","isActive","HeaderName","element","Link","to","HeaderNavigation","HeaderMenuItem","SideNav","expanded","isPersistent","SideNavItems","HeaderSideNavItems","HeaderGlobalBar","HeaderGlobalAction","tooltipPosition","tooltipAlignment","Application","Import","then","SPA","DOM","console","debug","System","StrictMode","forceRefresh","fallback","ReactDOM","document","getElementById"],"mappings":"0QAEAA,IAASC,OAAS,MAEHD,QAAf,E,gECiBeE,EAZE,SAAC,GAAD,QAAGC,cAAH,gBACb,cAACC,EAAA,EAAD,CAASC,SACAF,EAAW,cAACG,EAAA,EAAD,CAAeC,OAAS,SAAWC,MAAQ,CAAEC,UAAW,SAAUC,WAAY,YACnF,cAACJ,EAAA,EAAD,CAAeC,OAAS,SAAWC,MAAQ,CAAEC,UAAW,SAAUE,QAAS,a,wHCV/EC,ECyBG,kBACd,cAACC,EAAA,EAAD,CACIC,OAAS,gBAAGC,EAAH,EAAGA,kBAAmBC,EAAtB,EAAsBA,qBAAtB,OACL,eAACC,EAAA,EAAD,CAAQ,aAAW,cAAnB,UACI,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACI,aAAW,OACXC,QAAUJ,EACVK,SAAWN,IAEf,cAACO,EAAA,EAAD,CAAYC,QAAUC,IAAOC,GAAG,IAAIxB,OAAO,QAA3C,yBAGA,cAACyB,EAAA,EAAD,CAAkB,aAAW,cAA7B,SACI,cAACC,EAAA,EAAD,CAAgBJ,QAAUC,IAAOC,GAAG,gBAApC,4BAIJ,cAACG,EAAA,EAAD,CACI,aAAW,kBACXC,SAAWd,EACXe,cAAe,EAHnB,SAKI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAACL,EAAA,EAAD,CAAgBJ,QAAUC,IAAOC,GAAG,gBAApC,gCAMZ,eAACQ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAoB,aAAW,gBAAgBC,gBAAkB,QAAUC,iBAAmB,QAA9F,SACI,cAAC,IAAD,MAEJ,cAACF,EAAA,EAAD,CAAoB,aAAW,cAA/B,SACI,cAAC,IAAD,MAEJ,cAACA,EAAA,EAAD,CAAoB,aAAW,WAAWC,gBAAiB,OAAQC,iBAAkB,MAArF,SACI,cAAC,IAAD,gBC9ClBC,EAAcC,gBAAO,WACvB,OAAO,oDAAwBC,MAC3B,SAACC,GAAD,OAASA,QAIXC,EAAM,WAGR,OAFAC,QAAQC,MAAMC,GAGV,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAWC,cAAe,EAA1B,SACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SAAY,cAAC,EAAD,CAAU5C,QAAS,IAAzC,SACI,cAACkC,EAAD,cAQxBW,IAASlC,OAAQ,cAAC,EAAD,IAAUmC,SACtBC,eAAe,kB","file":"static/js/main.ab71d169.chunk.js","sourcesContent":["import { settings } from \"carbon-components\";\n\nsettings.prefix = \"cds\";\n\nexport default settings;\n","import { default as Types } from \"prop-types\";\n\nimport React from \"react\";\n\nimport {\n    InlineLoading,\n    Content\n} from \"@carbon/react\";\n\nconst Fallback = ({ Loader = false }) => (\n    <Content children={(\n            (Loader) ? (<InlineLoading status={ \"active\" } style={ { marginTop: \"1.0rem\", marginLeft: \"2.5rem\" } } />)\n                : (<InlineLoading status={ \"active\" } style={ { marginTop: \"1.0rem\", display: \"none\" } } />)\n        )}\n    />\n);\n\nFallback.propTypes = {\n    Loader: Types.bool\n};\n\nexport default Fallback;\n","import { default as Component } from \"./Component\";\n\nexport default Component;\n","import React from \"react\";\n\nimport styles from \"./SCSS/Index.module.scss\";\n\nimport {\n    Header,\n    HeaderContainer,\n    HeaderName,\n    HeaderNavigation,\n    HeaderMenuButton,\n    HeaderMenuItem,\n    HeaderGlobalBar,\n    HeaderGlobalAction,\n    SkipToContent,\n    SideNav,\n    SideNavItems,\n    HeaderSideNavItems\n} from \"@carbon/react\";\n\nimport {\n    Switcher,\n    Notification,\n    UserAvatar\n} from \"@carbon/icons-react/next\";\n\nimport { Link } from \"react-router-dom\";\n\nconst Component = () => (\n    <HeaderContainer\n        render={ ({ isSideNavExpanded, onClickSideNavExpand }) => (\n            <Header aria-label=\"UI Template\">\n                <SkipToContent />\n                <HeaderMenuButton\n                    aria-label=\"Menu\"\n                    onClick={ onClickSideNavExpand }\n                    isActive={ isSideNavExpanded }\n                />\n                <HeaderName element={ Link } to=\"/\" prefix=\"Cloud\">\n                    UI Template\n                </HeaderName>\n                <HeaderNavigation aria-label=\"UI Template\">\n                    <HeaderMenuItem element={ Link } to=\"/repositories\">\n                        Repositories\n                    </HeaderMenuItem>\n                </HeaderNavigation>\n                <SideNav\n                    aria-label=\"Side navigation\"\n                    expanded={ isSideNavExpanded }\n                    isPersistent={ false }\n                >\n                    <SideNavItems>\n                        <HeaderSideNavItems>\n                            <HeaderMenuItem element={ Link } to=\"/repositories\">\n                                Repositories\n                            </HeaderMenuItem>\n                        </HeaderSideNavItems>\n                    </SideNavItems>\n                </SideNav>\n                <HeaderGlobalBar>\n                    <HeaderGlobalAction aria-label=\"Notifications\" tooltipPosition={ \"right\" } tooltipAlignment={ \"start\" }>\n                        <Notification />\n                    </HeaderGlobalAction>\n                    <HeaderGlobalAction aria-label=\"User Avatar\">\n                        <UserAvatar />\n                    </HeaderGlobalAction>\n                    <HeaderGlobalAction aria-label=\"Switcher\" tooltipPosition={\"left\"} tooltipAlignment={\"end\"}>\n                        <Switcher />\n                    </HeaderGlobalAction>\n                </HeaderGlobalBar>\n            </Header>\n        ) }\n    />\n);\n\nexport default Component;\n","import * as System from \"./Configuration\";\n\nimport \"./index.scss\";\n\nimport React, {\n    Suspense,\n    lazy as Import\n} from \"react\";\n\nimport ReactDOM from \"react-dom\";\n\nimport { default as Skeleton } from \"./Page-Loader\";\n\nimport { default as Menu } from \"./components/Menu/Index\";\n\nimport {\n    BrowserRouter as Navigator,\n    HashRouter as Router\n} from \"react-router-dom\";\n\nconst Application = Import(() => {\n    return import(\"./Application\").then(\n        (SPA) => SPA\n    );\n});\n\nconst DOM = () => {\n    console.debug(System);\n\n    return (\n        <React.StrictMode>\n            <Navigator forceRefresh={ false }>\n                <Router>\n                    <Menu/>\n                    <Suspense fallback={ (<Skeleton Loader={ false } />) }>\n                        <Application />\n                    </Suspense>\n                </Router>\n            </Navigator>\n        </React.StrictMode>\n    );\n};\n\nReactDOM.render((<DOM />), document\n    .getElementById(\"Application\")\n);\n\n/// ... import(\"./Service-Worker.js\").then((Module) => {\n/// ...     Module.unregister();\n/// ... });\n"],"sourceRoot":""}